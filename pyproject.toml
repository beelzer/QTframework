[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "qt-framework"
version = "0.1.0"
description = "Modern, modular Qt application framework for Python"
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
keywords = ["qt", "framework", "gui", "desktop", "application"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dependencies = [
    "PySide6>=6.8.0",
    "pydantic>=2.10.0",
    "pydantic-settings>=2.6.0",
    "typing-extensions>=4.12.0",
    "watchdog>=6.0.0",
    "pyyaml>=6.0.2",
    "python-dotenv>=1.0.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.15.0",
    "numpy>=2.0.0",
    "matplotlib>=3.9.0",
    "pandas>=2.2.0",
    "pip>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pytest>=8.3.0",
    "pytest-qt>=4.4.0",
    "pytest-cov>=6.0.0",
]

[project.urls]
Homepage = "https://github.com/beelzer/qt-framework"
Documentation = "https://qt-framework.readthedocs.io"
Repository = "https://github.com/beelzer/qt-framework.git"
Issues = "https://github.com/beelzer/qt-framework/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/qtframework"]

[tool.ruff]
target-version = "py313"
line-length = 100
indent-width = 4

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "RUF",  # ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by formatter)
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
known-first-party = ["qtframework"]

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_error_codes = true
show_column_numbers = true
show_error_context = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=qtframework",
    "--cov-report=term-missing",
    "--cov-report=html",
]